apply plugin: 'application'

group 'ZoteCoreLoader'
version 'SNAPSHOT'

application {
    mainClass = 'com.reider745.Main'
    applicationDefaultJvmArgs = ['--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED']
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.lanink.cn/repository/maven-public/'
    }
    maven {
        url 'https://repo.opencollab.dev/maven-releases/'
    }
    maven {
        url 'https://repo.opencollab.dev/maven-snapshots/'
    }
}

dependencies {
    // https://repo.lanink.cn/#browse/browse:maven-public:cn/nukkit/Nukkit/MOT-SNAPSHOT
    implementation (group: 'cn.nukkit', name: 'Nukkit', version: 'MOT-20240213.074103-139') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
    // https://central.sonatype.com/artifact/com.google.code.gson/gson/versions
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    // https://central.sonatype.com/artifact/org.mozilla/rhino/versions
    implementation group: 'org.mozilla', name: 'rhino', version: '1.7.8'
    // https://central.sonatype.com/artifact/org.json/json/versions
    implementation group: 'org.json', name: 'json', version: '20231013'

    implementation fileTree (dir: 'iclibs', include: '*.jar')
    implementation fileTree (dir: 'iclibs/dex2jar', include: '*.jar')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
}

jar {
    duplicatesStrategy 'exclude'
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    from configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
}

run {
    workingDir 'target'
    standardInput System.in
}

task rebuildAndroidStubs(type: JavaExec, dependsOn: classes) {
    javaLauncher = javaToolchains.launcherFor {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.reider745.api.hooks.RebuildJavadoc'
}
