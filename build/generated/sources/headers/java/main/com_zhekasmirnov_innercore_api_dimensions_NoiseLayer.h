/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_zhekasmirnov_innercore_api_dimensions_NoiseLayer */

#ifndef _Included_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
#define _Included_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
 * Method:    nativeConstruct
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer_nativeConstruct
  (JNIEnv *, jclass);

/*
 * Class:     com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
 * Method:    nativeAddOctave
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer_nativeAddOctave
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
 * Method:    nativeSetConversion
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer_nativeSetConversion
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_zhekasmirnov_innercore_api_dimensions_NoiseLayer
 * Method:    nativeSetGridSize
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_dimensions_NoiseLayer_nativeSetGridSize
  (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
