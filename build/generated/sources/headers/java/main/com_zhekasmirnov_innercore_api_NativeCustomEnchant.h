/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_zhekasmirnov_innercore_api_NativeCustomEnchant */

#ifndef _Included_com_zhekasmirnov_innercore_api_NativeCustomEnchant
#define _Included_com_zhekasmirnov_innercore_api_NativeCustomEnchant
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    constructNew
 * Signature: (ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_constructNew
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setDescription
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setDescription
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setFrequency
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setFrequency
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setIsLootable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setIsLootable
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setIsDiscoverable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setIsDiscoverable
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setIsTreasure
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setIsTreasure
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setIsMeleeDamageEnchant
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setIsMeleeDamageEnchant
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setIsProtectionEnchant
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setIsProtectionEnchant
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setMasks
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setMasks
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setMinMaxLevel
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setMinMaxLevel
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    setMinMaxCostPoly
 * Signature: (JFFFFFF)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_setMinMaxCostPoly
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    passCurrentDamageBonus
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_passCurrentDamageBonus
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_NativeCustomEnchant
 * Method:    passCurrentProtectionBonus
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_NativeCustomEnchant_passCurrentProtectionBonus
  (JNIEnv *, jclass, jfloat);

#ifdef __cplusplus
}
#endif
#endif
