/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_zhekasmirnov_innercore_api_entities_NativePathNavigation */

#ifndef _Included_com_zhekasmirnov_innercore_api_entities_NativePathNavigation
#define _Included_com_zhekasmirnov_innercore_api_entities_NativePathNavigation
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    nativeConstruct
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_nativeConstruct
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    nativeCleanup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_nativeCleanup
  (JNIEnv *, jclass);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    moveToCoords
 * Signature: (FFFF)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_moveToCoords
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    moveToEntity
 * Signature: (JF)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_moveToEntity
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setMaxNavigationDistance
 * Signature: (F)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setMaxNavigationDistance
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getMaxNavigationDistance
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getMaxNavigationDistance
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    stop
 * Signature: ()Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_stop
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setType
 * Signature: (I)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setType
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    isDone
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_isDone
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    canPassDoors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_canPassDoors
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanPassDoors
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanPassDoors
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    isRiverFollowing
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_isRiverFollowing
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setIsRiverFollowing
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setIsRiverFollowing
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    canOpenDoors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_canOpenDoors
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanOpenDoors
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanOpenDoors
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getAvoidSun
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getAvoidSun
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setAvoidSun
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setAvoidSun
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getAvoidWater
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getAvoidWater
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setAvoidWater
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setAvoidWater
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setEndPathRadius
 * Signature: (F)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setEndPathRadius
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanSink
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanSink
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanSink
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanSink
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getAvoidDamageBlocks
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getAvoidDamageBlocks
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setAvoidDamageBlocks
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setAvoidDamageBlocks
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanFloat
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanFloat
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanFloat
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanFloat
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    isAmphibious
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_isAmphibious
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setIsAmphibious
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setIsAmphibious
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getAvoidPortals
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getAvoidPortals
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setAvoidPortals
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setAvoidPortals
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanBreach
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanBreach
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanBreach
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanBreach
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanJump
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanJump
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanJump
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanJump
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getSpeed
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getSpeed
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setSpeed
 * Signature: (F)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setSpeed
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanPathOverLava
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanPathOverLava
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanPathOverLava
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanPathOverLava
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanWalkInLava
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanWalkInLava
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanWalkInLava
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanWalkInLava
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getCanOpenIronDoors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getCanOpenIronDoors
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setCanOpenIronDoors
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setCanOpenIronDoors
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getHasEndPathRadius
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getHasEndPathRadius
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setHasEndPathRadius
 * Signature: (Z)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setHasEndPathRadius
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getTerminationThreshold
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getTerminationThreshold__
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getTerminationThreshold
 * Signature: (F)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getTerminationThreshold__F
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    getTickTimeout
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_getTickTimeout
  (JNIEnv *, jobject);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    setTickTimeout
 * Signature: (I)Lcom/zhekasmirnov/innercore/api/entities/NativePathNavigation;
 */
JNIEXPORT jobject JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_setTickTimeout
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_zhekasmirnov_innercore_api_entities_NativePathNavigation
 * Method:    isStuck
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_zhekasmirnov_innercore_api_entities_NativePathNavigation_isStuck
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
